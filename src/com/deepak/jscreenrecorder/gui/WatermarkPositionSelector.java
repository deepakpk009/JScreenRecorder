/*
 This file is part of JScreenRecorder v0.3

 JScreenRecorder is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 JScreenRecorder is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with JScreenRecorder.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.deepak.jscreenrecorder.gui;

import com.deepak.jscreenrecorder.core.config.RecordConfig;

/**
 *
 * @author deepak
 */
// this class provides implimentation fo the watermark position selection
public class WatermarkPositionSelector extends javax.swing.JFrame {

    // local refernce object of the record config
    private RecordConfig recConfig = null;

    // default constructor 
    public WatermarkPositionSelector() {
        // initilise the components 
        initComponents();
    }

    // constructor with the record config as parameter
    public WatermarkPositionSelector(RecordConfig recConfig) {
        // set the local reference
        this.recConfig = recConfig;
        // initilise the components 
        initComponents();
        // set the position selector window bounds as the capture area bounds
        this.setBounds(recConfig.getFrameDimension());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        watermarkPositionPanel = new com.deepak.jscreenrecorder.gui.WatermarkPositionPanel(recConfig.getWatermarkImage());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Watermark Position Selector");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(watermarkPositionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(watermarkPositionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // method called on form window closing event
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        // set the watermark location from the watermark position panel
        recConfig.setWatermarkLocation(watermarkPositionPanel.getPosition());
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.deepak.jscreenrecorder.gui.WatermarkPositionPanel watermarkPositionPanel;
    // End of variables declaration//GEN-END:variables
}
